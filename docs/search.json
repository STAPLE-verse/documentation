[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STAPLE Documentation",
    "section": "",
    "text": "1 Preface\nScientific research has become increasingly complex, requiring specialized skills, interdisciplinary work, and collaboration among large teams. Managing such projects and tracking data and metadata has become a significant challenge. The need for FAIR (findable, accessible, interoperable, and reusable Wilkinson et al., 2016) open data, materials, and metadata has similarly grown, especially considering recent mandates for required sharing for federally funded projects (Rep. Foxx, 2019; Rep. Ryan, 2019). While user-friendly software tools that help researchers structure metadata exist, few researchers are aware of their necessity and usefulness, the onus is still on the project team to collect and curate this information. Studies using teams of researchers require sophisticated tracking of all project elements, and therefore, there is a need for scientific project management software that is tailored to the management of all manner of science projects. Software that promotes best practices in FAIR data and metadata would increase openness in all reporting, and tracking, and reporting standards.\nCurrently, the tools and websites designed for researchers are focused on getting researchers to share their materials, code, and data (i.e., Open Science Framework, FigShare, Zenodo. These repositories represent a necessary resource for long-term storage of outputs, but do not help researchers organize or track information during the life of a study. Project management software, like Asana, Monday, or ClickUp, are designed from a business perspective that is not tailored to scientific research. While the features that scientific research requires may be found in some individual project management software, no current solution provides all the essential features, such as the ability to assign tasks at different scales (e.g., teams, individuals), integrated metadata, fully transparent access to all information in the project manager, and long-term storage that complies with international data privacy regulations. Project management software is designed to get things done rather than document the way a project was completed, so attempts to use existing software for these features often involve ‘hacking’ it to extract necessary records.\nTo this end, we developed STAPLE (Science Tracking Across the Project LifEspan), which not only helps with the unique challenges of project management of research but includes open and transparent documentation of data and metadata, as well as providing templates for minimum metadata collection. STAPLE allows users to add project components based on research type, assign timelines, delegate tasks to individuals or groups, and link to long-term storage of research outputs. STAPLE helps track authorship credit and contributor roles via tasks or contributors. STAPLE includes default metadata standards for documenting common research outputs and is fully open-source, enabling community input and adaptation. Designed for global reach, STAPLE supports the transition to open science by including researchers and outputs that are often overlooked, regardless of technical expertise. Through its point-and-click interface, and downloadable documentation outputs, STAPLE makes it easier for all researchers to participate in transparent, inclusive, and reproducible science.\n\n\n\n\nRep. Foxx, V. [R.-N. (2019). H.R.150 - 116th Congress (2019-2020): GREAT Act. https://www.congress.gov/bill/116th-congress/house-bill/150\n\n\nRep. Ryan, P. D. [R.-W. (2019). H.R.4174 - 115th Congress (2017-2018): Foundations for Evidence-Based Policymaking Act of 2018. https://www.congress.gov/bill/115th-congress/house-bill/4174\n\n\nWilkinson, M. D., Dumontier, M., Aalbersberg, Ij. J., Appleton, G., Axton, M., Baak, A., Blomberg, N., Boiten, J.-W., Silva Santos, L. B. da, Bourne, P. E., Bouwman, J., Brookes, A. J., Clark, T., Crosas, M., Dillo, I., Dumon, O., Edmunds, S., Evelo, C. T., Finkers, R., … Mons, B. (2016). The FAIR Guiding Principles for scientific data management and stewardship. Scientific Data, 3(1), 160018. https://doi.org/10.1038/sdata.2016.18",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Preface</span>"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  Introduction",
    "section": "",
    "text": "The STAPLE mission: Project Management software that allows you to document your research project to improve transparency.\nAs researchers, we must balance attention to the big picture: the overarching goals, timelines, theories, and hypotheses of a project, with the smaller goals and tasks required to realize those ambitions. While most researchers receive training in designing studies, collecting and analyzing data, and publishing findings, formal instruction in project management is rare. Instead, these skills are often acquired informally, modeled within the research lab environment and shaped by a supervisor’s style. Each project also introduces unique needs and circumstances, and even the addition of a single collaborator can generate new layers of coordination and complexity.\nEvidence indicates that the number of co-authors and collaborators on research projects has increased steadily over time (Wuchty et al., 2007). Advances in digital communication and collaboration tools such as Zoom, GitHub, and Google Workspace, combined with the globalization of research, have enabled teams to work together across great distances and disciplinary boundaries (Cummings & Kiesler, 2005, 2007). Large-scale collaborations are increasingly encouraged, not only to tackle ambitious scientific questions, but also to enhance the diversity of participants, researchers, and cultures represented in data (Adan, 2023; Moshontz et al., 2018; Swartz et al., 2019). The inclusion of multiple collaborators, each embedded in different lab cultures, institutions, geopolitical contexts, and languages, increases the complexity of managing research projects.\nSo why do we need software?\nGeneral project management platforms, such as Asana, Monday, ClickUp, and Trello, are widely used in business settings, but they were designed around business-oriented workflows and templates. Research projects, however, present unique challenges that do not map neatly onto these models. Scientific projects often require coordination of specialized tasks such as research design, ethical approval, data collection across multiple sites, metadata documentation, open data sharing, and publication requirements (Borghi & Gulick, 2021; Fecher & Friesike, 2014).\nLarge-scale collaborations have experimented with adapting existing structures, sometimes treating multi-team projects like classrooms or leveraging educational technologies, but these solutions are partial fits at best. What researchers need is a system that recognizes the scientific lifecycle: from ideas and preregistration, to data collection, to analysis, dissemination, and long-term archiving. STAPLE is designed for scientists, by scientists. It was built with input not only from researchers but also from key stakeholders in the broader research ecosystem, including funders, librarians, and journals, ensuring that the software supports transparency, reproducibility, and effective project management across diverse scientific contexts.\nSo what’s the deal with documentation?\nIn tandem with the encouragement for interdisciplinary, diverse teams, researchers have begun to focus on the improvement of science through transparency and sharing. The Transparency and Openness guidelines establish ideals for projects to be reproducible, open, and transparency through data sharing, code/analysis sharing, materials sharing, pre-registration, and replication (Grant et al., 2025). Journals require different levels of sharing for publication, which has pushed researchers to begin to implement these practices. However, the simple sharing of data, code, and materials does not make them FAIR: Findable, Accessible, Interoperable, and Reusable (Wilkinson et al., 2016). Simple sharing of data does not necessarily allow someone to find that data in relation to the research project, or allow a researcher to know what V1 means in the data, or even reuse part of the data.\nCreating adequate documentation for the reuse of any output from a project can be difficult. There are often no clear standards, the work can be time consuming, and is often left to the end of a project when important details may have been forgotten. STAPLE is designed to encourage you to document information along the way and to provide guidance with what you should include with each document. As you complete specific task, such as create your materials for a study, you will be able to link your project to those materials and include information to interpret and understand those documents. We provide a set of minimum documentation standards for multiple types of documents - and the ability for you to include extra information if your field has set standards.\nOk, so that’s transparent?\nSTAPLE allows you to track and run your project - and then include research outputs from that project. Each step of the way, STAPLE collects data about who did what and when. If you are the only person working on a project, it’s simple: you will export a final project timeline that includes information about each step of the project, each output, and the documentation needed to make those outputs useful. If you work with other people, STAPLE will allow you to assign tasks to those individuals (or teams of individuals) to complete as part of the project management functionality. At the same time, STAPLE tracks their work and creates a project timeline that shows that they completed a task for the project.\nThis component of the software was designed to align with contributorship models of research - instead of “authorship”, each person receives credit for the components they contributed to the project (Allen et al., 2014, 2019). Each field has different standards for authorship, and many individual’s work may not be acknowledged due to those cultures. Using STAPLE, their work would be credited, even if they did not earn final “authorship” on a publication. This output is also useful for defining contributions into systems such as CRediT - where each person’s role is binned into categories. By linking each role to specific tasks, we can transparently show what each role means to a specific project.\n\n\n\n\nAdan, C. (2023). The importance of diversity in clinical research. British Journal of Nursing (Mark Allen Publishing), 32(18), 898–901. https://doi.org/10.12968/bjon.2023.32.18.898\n\n\nAllen, L., O’Connell, A., & Kiermer, V. (2019). How can we ensure visibility and diversity in research contributions? How the Contributor Role Taxonomy (CRediT) is helping the shift from authorship to contributorship. Learned Publishing, 32(1), 71–74. https://doi.org/10.1002/leap.1210\n\n\nAllen, L., Scott, J., Brand, A., Hlava, M., & Altman, M. (2014). Publishing: Credit where credit is due. Nature, 508(7496), 312–313. https://doi.org/10.1038/508312a\n\n\nBorghi, J. A., & Gulick, A. E. V. (2021). Data management and sharing: Practices and perceptions of psychology researchers. PLOS ONE, 16(5), e0252047. https://doi.org/10.1371/journal.pone.0252047\n\n\nCummings, J. N., & Kiesler, S. (2005). Collaborative Research Across Disciplinary and Organizational Boundaries. Social Studies of Science, 35(5), 703–722. https://doi.org/10.1177/0306312705055535\n\n\nCummings, J. N., & Kiesler, S. (2007). Coordination costs and project outcomes in multi-university collaborations. Research Policy, 36(10), 1620–1634. https://doi.org/10.1016/j.respol.2007.09.001\n\n\nFecher, B., & Friesike, S. (2014). Open Science: One Term, Five Schools of Thought (S. Bartling & S. Friesike, Eds.; pp. 17–47). Springer International Publishing. https://doi.org/10.1007/978-3-319-00026-8_2\n\n\nGrant, S., Corker, K., Mellor, D., Stewart, S., Cashin, A., Lagisz, M., Mayo-Wilson, E., Moher, D., Umpierre, D., Barbour, V., Buck, S., Collins, G., Hazlett, H., Hrynaszkiewicz, I., Lee, C., Parker, T., Rethlefsen, M., Toomey, E., & Nosek, B. (2025). TOP 2025: An update to the transparency and openness promotion guidelines. https://doi.org/10.31222/osf.io/nmfs6_v2\n\n\nMoshontz, H., Campbell, L., Ebersole, C. R., IJzerman, H., Urry, H. L., Forscher, P. S., Grahe, J. E., McCarthy, R. J., Musser, E. D., Antfolk, J., Castille, C. M., Evans, T. R., Fiedler, S., Flake, J. K., Forero, D. A., Janssen, S. M. J., Keene, J. R., Protzko, J., Aczel, B., … Chartier, C. R. (2018). The Psychological Science Accelerator: Advancing Psychology Through a Distributed Collaborative Network. Advances in Methods and Practices in Psychological Science, 1(4), 501–515. https://doi.org/10.1177/2515245918797607\n\n\nSwartz, T. H., Palermo, A.-G. S., Masur, S. K., & Aberg, J. A. (2019). The Science and Value of Diversity: Closing the Gaps in Our Understanding of Inclusion and Diversity. The Journal of Infectious Diseases, 220(220 Suppl 2), S33–S41. https://doi.org/10.1093/infdis/jiz174\n\n\nWilkinson, M. D., Dumontier, M., Aalbersberg, Ij. J., Appleton, G., Axton, M., Baak, A., Blomberg, N., Boiten, J.-W., Silva Santos, L. B. da, Bourne, P. E., Bouwman, J., Brookes, A. J., Clark, T., Crosas, M., Dillo, I., Dumon, O., Edmunds, S., Evelo, C. T., Finkers, R., … Mons, B. (2016). The FAIR Guiding Principles for scientific data management and stewardship. Scientific Data, 3(1), 160018. https://doi.org/10.1038/sdata.2016.18\n\n\nWuchty, S., Jones, B. F., & Uzzi, B. (2007). The Increasing Dominance of Teams in Production of Knowledge. Science, 316(5827), 1036–1039. https://doi.org/10.1126/science.1136099",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "core-concepts.html",
    "href": "core-concepts.html",
    "title": "3  Core Concepts",
    "section": "",
    "text": "3.1 STAPLE Elements\nResearch projects are made up of many moving parts: overarching goals, specific hypotheses, tasks to carry out, and the people who contribute along the way. To manage this complexity, STAPLE organizes projects into a small set of core elements. These elements provide a shared structure that scientists and collaborators can understand quickly, regardless of discipline.\nAt the highest level, a Project represents the scientific effort being undertaken: its aims, scope, and timeline. Within each project, researchers define Tasks, which capture the individual units of work needed to achieve those aims. Teams and Contributor/Members provide the human side of the system, reflecting roles, privileges, and collaborations across labs and institutions. Every action taken on a task, whether assigning it, updating its status, or marking it as complete, is recorded in Task Logs, creating a transparent history of progress. Finally, Tags allow projects to be categorized, searched, and documented in ways that make sense for science.\nTogether, these elements form the backbone of STAPLE, giving research teams a clear, consistent framework for planning and documenting their work.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Core Concepts</span>"
    ]
  },
  {
    "objectID": "core-concepts.html#metadata",
    "href": "core-concepts.html#metadata",
    "title": "3  Core Concepts",
    "section": "3.2 Metadata",
    "text": "3.2 Metadata\nIn scientific research, data alone is never enough, what makes data meaningful is the metadata that describes it. Metadata captures the critical context behind research activities: the methods used, the instruments applied, the variables measured, and the conditions under which data were collected. Without metadata, results can be difficult to reproduce, interpret, or build upon.\nSTAPLE treats metadata as a first-class feature, not an afterthought. The software also automatically records who did what, and when, embedding provenance metadata directly within projects. Project information, such as data, materials, and analysis code, can be linked within STAPLE and enriched with metadata. These details are captured using the Forms feature, which provides structured templates tailored to research needs. Completion of metadata can be assigned to contributors via Tasks, making documentation part of the normal project workflow rather than an extra burden.\nBy embedding metadata capture directly into everyday research activities, STAPLE makes it easier for scientists to document their work transparently, meet the expectations of journals and funders, and create records that future collaborators, or even their own future selves, can interpret and reuse. All metadata can be exported as machine-readable JSON for computational use and as human-readable interactive Project Summary reports for sharing and communication.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Core Concepts</span>"
    ]
  },
  {
    "objectID": "core-concepts.html#definitions-of-terms",
    "href": "core-concepts.html#definitions-of-terms",
    "title": "3  Core Concepts",
    "section": "3.3 Definitions of Terms",
    "text": "3.3 Definitions of Terms\n\n3.3.1 User\nA user in STAPLE is anyone with an account who has accepted the platform’s terms and conditions. Users can create projects and related elements within their own accounts, and they can also participate in projects owned by others. Users can log in and out, update their personal information (e.g., username, password, email, and profile details), and delete their account. They may add and manage contributors, organize teams within their projects, and assign tasks.\nNote: Deleting your STAPLE account does not remove your past contributions to other projects. You will lose editing access, but only a project administrator can fully remove you from their project.\n\n3.3.1.1 Project Administrator\n\nThe user who creates a project is automatically assigned as its project administrator.\nAdditional administrators can be added to a project as needed.\nEvery project must have at least one administrator at all times.\nAdministrators have the highest level of control, including managing contributors, editing project settings, and assigning roles.\n\n\n\n3.3.1.2 Contributor\n\nA contributor is a user added to a project by an administrator.\nContributors generally have limited access: they can view project information and complete tasks assigned to them but cannot change project settings or manage other users.\nThis role allows project teams to include collaborators without granting full administrative privileges.\n\n\n\n3.3.1.3 Teams\n\nTeams are a special type of contributor within a project.\nA user can belong to multiple teams in the same project.\nTeams are useful when a task requires collaboration by a group rather than an individual.\n\nFor example, a data collection team working with human participants may need to complete an ethics application. Only one person needs to submit the form within STAPLE, but the entire team receives credit for completing the task. Similarly, a translation team might be responsible for converting study materials from French into Spanish. The collective goal is to provide the final Spanish materials, but all members of the team are credited for the work.\n\n\n\n3.3.2 Main and Project Level Options\n\n3.3.2.1 Dashboard\nThe Dashboard is your personalized home page in STAPLE. It provides a high-level overview of all the projects you’re involved in, along with recent updates and tasks assigned to you. From here, you can quickly jump into active projects, track progress at a glance, and see what needs your attention today. Think of it as your command center for research project management.\nIn addition to this main dashboard, each project also has its own Project Dashboard. While the main dashboard gives you a cross-project snapshot, the project dashboard focuses on the details of a single project, its contributors, tasks, metadata, milestones, and outputs. Together, the two levels of dashboards help you move easily between the big picture and the project-specific details.\n\n\n3.3.2.2 Projects\nProjects are the central containers for scientific work. Each project includes its own tasks, teams, metadata, and outputs. On the Projects page, you can:\n\nCreate a new project.\nView and manage existing projects.\nGo into the project level dashboard.\n\nProjects provide the big-picture structure that keeps research activities organized and transparent.\n\n\n3.3.2.3 Invitations\nInvitations are how collaborators join projects in STAPLE. Project administrators send invitations that specify the role a user will have once they accept.\n\nOn the main dashboard, you can view all of your pending invitations across projects and choose to accept or decline them.\nOn a project dashboard, only project administrators can see the invitations they have sent for that specific project.\n\nA contributor cannot be assigned tasks or added to teams until they have accepted their invitation. This system ensures that every collaborator’s involvement is explicit, documented, and consented to before work begins.\n\n\n3.3.2.4 Tasks\nTasks break a project down into actionable steps and are the backbone of daily research activity in STAPLE.\n\nOn the main dashboard, the Tasks page shows a consolidated view of all tasks assigned to you across every project, so nothing slips through the cracks.\nOn a project dashboard, project administrators can view and manage all tasks within that project, while contributors see only the tasks assigned to them.\n\nWithin a project, you can:\n\nCreate new tasks for yourself or others.\nAssign tasks to contributors or teams.\nUpdate task status (to-do, in progress, complete).\nAdd labels, metadata, and logs to track progress.\n\nThis two-level view ensures that contributors can stay focused on their own responsibilities while project managers maintain oversight of the entire project’s workflow.\n\n\n3.3.2.5 Notifications\nNotifications keep you informed about project activity without needing to check each page manually. These alerts let you know when:\n\nYou’ve been assigned a new task.\nA task you’re involved in has been updated, completed, or approved.\nYou’ve received a project invitation.\n\nOn the main dashboard, notifications show updates from all of your projects in one place. On a project dashboard, notifications are filtered to that project only, helping you focus on what matters most in the current context. The Notifications page ensures you never miss important updates in collaborative projects.\n\n\n3.3.2.6 Forms\nForms are structured templates for collecting metadata at the project or task level. They make sure essential details, such as ethics approvals, instrument calibration, dataset versions, or preregistration links, are captured consistently.\nSTAPLE includes a library of form templates, giving you a starting point if you’re not sure what metadata to collect. You can also design your own forms tailored to your project’s needs. Forms must be created before they can be used in a project, ensuring that the structure is in place before contributors start filling them out.\nOnce in use, forms become a powerful way to collect metadata directly within your workflow. You can:\n\nFill out forms as part of project tasks.\nAssign forms to contributors or teams to ensure documentation responsibilities are shared.\nReuse templates across multiple projects for consistency.\n\nBy embedding metadata capture directly into the research process, forms help projects meet transparency and reproducibility standards while reducing the burden of after-the-fact documentation.\n\n\n3.3.2.7 Roles\nRoles in STAPLE describe the kinds of contributions people make within a project. While they draw inspiration from frameworks like the CRediT taxonomy, they are not limited to authorship or publication contexts. Instead, roles provide a flexible way to document responsibilities and ensure that contributions are visible across the lifespan of a project.\nIn STAPLE, roles can be:\n\nAssigned to people → to show what responsibilities each contributor holds in a project.\nAssigned to tasks → to clarify what kind of contribution a task represents and how it fits into the project.\n\nRoles provide a flexible system for understanding who did what and for standardizing contributions across projects. Role templates are avaliable to add to your account, which you can use across all projects. They must be created on the main dashboard before you can use them.\n\n\n\n3.3.3 Project Level Options\n\n3.3.3.1 Tags\nTags are flexible labels that help organize and filter milestones, tasks, and contributors. Tags make it easier to search and group related work across large projects. You can view customized tracking by using tags across these parts of the project.\n\n\n3.3.3.2 Milestones\nMilestones mark major points of progress within a project and help teams track deadlines and achievements. In STAPLE, milestones can also group related tasks together, providing a clear structure for managing phases of a project. Each milestone is tied to a timeline, and STAPLE automatically visualizes them in a Gantt chart, making it easier to see how tasks and deadlines align. This helps teams monitor progress, anticipate bottlenecks, and keep projects moving forward on schedule.\n\n\n3.3.3.3 Notes\nNotes provide a space for free-text documentation within a project. Unlike structured metadata captured through Forms, Notes allow contributors to record context, reminders, or reflections in their own words.\nNotes can be:\n\nPrivate – visible only to the author.\nShared with contributors – if shared by a project administrator, contributors can view them.\nRestricted to administrators – for communication only among project managers.\n\nThis flexibility makes Notes useful for everything from personal reminders to collaborative discussions among administrators.\n\n\n3.3.3.4 Form Data\nForm Data is the collected information from metadata Forms within a project. It provides a centralized view of all structured metadata entries—such as instrument details, ethics protocols, or dataset versions—that have been completed by contributors. Form Data can be reviewed, exported, and updated if errors have occurred.\n\n\n3.3.3.5 Summary\nThe Summary page generates a shareable overview of the project. It consolidates contributors, tasks, roles, metadata, milestones, and outputs into one report. Project Summaries can be exported in both machine-readable formats (JSON) and human-readable interactive reports, making them useful for collaboration, archiving, and compliance with funder or journal requirements.\n\n\n3.3.3.6 Settings\nThe Settings page allows administrators to configure project-level metadata. This includes details such as the project title, description, timeline, and high-level information about the project’s scope.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Core Concepts</span>"
    ]
  },
  {
    "objectID": "installation.html",
    "href": "installation.html",
    "title": "4  Installation Guide",
    "section": "",
    "text": "4.1 Assumptions\nThis guide assumes you meet the following prerequisites:",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Installation Guide</span>"
    ]
  },
  {
    "objectID": "installation.html#assumptions",
    "href": "installation.html#assumptions",
    "title": "4  Installation Guide",
    "section": "",
    "text": "You are working on a Linux server. We use Ubuntu 20.04 in this guide, but the steps should be consistent for most Linux distributions.\nYou have shell/terminal access to the server.\nYou have worked with the command line before.\nYou have sudo privileges to install packages and manage services.\nYou understand what hidden files are (and how to view them).\nYou have a basic understanding of SQL and databases (familiarity with PostgreSQL is not required).\nYou know what Apache and/or Nginx servers are and how to edit their configuration files.\nYou can imagine yourself using git (even if you’re new to it).",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Installation Guide</span>"
    ]
  },
  {
    "objectID": "installation.html#local-development-or-hosting",
    "href": "installation.html#local-development-or-hosting",
    "title": "4  Installation Guide",
    "section": "4.2 Local Development or Hosting",
    "text": "4.2 Local Development or Hosting\nYou can also run STAPLE locally on your own computer, with a few limitations.\n\nIf you are using a Linux system, you can follow the same instructions described in this guide from Blitz/JS Installation through Starting the App – Production.\nOn Windows, you can run STAPLE as well, but you’ll need to use a shell environment (such as PowerShell, Git Bash, or WSL2) to follow the same command-line instructions.\nOn macOS, the setup is nearly identical to Linux, and you can use the standard Terminal application to run the commands.\n\nWhen running locally, you will be the only user able to enter data. The application is not hosted on the web, so others will not be able to connect.\nDespite this limitation, you will still have access to the full functionality of project management and metadata entry/output. This makes local installation useful for:\n\nTesting the system before deploying to a server\nExploring functionality on your own\nManaging personal projects without a shared server",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Installation Guide</span>"
    ]
  },
  {
    "objectID": "installation.html#installation-steps",
    "href": "installation.html#installation-steps",
    "title": "4  Installation Guide",
    "section": "4.3 Installation Steps",
    "text": "4.3 Installation Steps\n\n4.3.1 Web Server Installation\nSTAPLE requires a web server to handle requests. You can choose between Apache or Nginx:\n\nApache – Installation Instructions\nNginx – Installation Instructions\n\n\n⚠️ Important: Only install one. Apache and Nginx don’t play nicely together if they’re both running on the same server.\n\nWe recommend using Nginx, and our production server is configured with Nginx. This step is only required for people who want to host the software online. You do not need it for local development or use.\n\n\n4.3.2 Blitz/JS Installation\nSTAPLE is built with Blitz.js, which runs on Node.js. To install the required tools:\n\nInstall Node.js and npm\n\nFollow the official installation instructions: Node.js Downloads\nRequired versions:\n\nNode.js: v18+\nnpm: v9+\n\nVerify installation with:\n\n\nnode -v\nnpm -v\n\n(Optional) Yarn: You may use Yarn if you prefer, but this guide assumes npm.\nInstall Blitz.js\n\nRun:\n\n\nnpm install -g blitz\n\nVerify installation (version v2+ required):\n\nblitz -v\n\nℹ️ Note: Depending on your server setup, you may need to prepend commands with sudo.\n\n\n\n4.3.3 Clone the Repository\nNext, you’ll need to copy the STAPLE source code onto your server.\n\nInstall Git (if not already installed):\n\nsudo apt-get update\nsudo apt-get install git\n\nNavigate to your web directory (commonly /var/www/html/ or /var/www/):\nNote: you can use any folder on your computer if you are not hosting the software online or want to do local development.\n\ncd /var/www/html/\n\nClone the repository:\n\nFollow the GitHub guide on cloning repositories.\n\nOr simply run:\n\n\n\ngit clone https://github.com/STAPLE-verse/STAPLE.git\n\nThis will create a new folder named STAPLE containing all the files you need.\nMove into the project folder:\n\ncd STAPLE\n\n\n4.3.4 Database Installation\nSTAPLE requires a PostgreSQL database.\n\nInstall PostgreSQL\n\nEnsure that you have a local PostgreSQL service running.\nFollow this guide for installation: Postgres Setup Instructions.\nDuring installation:\n\nWrite down the superuser credentials (important on non-Linux systems).\nOther databases may work, but you would need to modify the STAPLE codebase to support them.\n\n\nCreate Databases\n\nOpen a terminal and run:\n\n\n# Switch into PostgreSQL as the postgres superuser\nsudo -u postgres psql\n\n# Create databases for STAPLE\nCREATE DATABASE staple;\nCREATE DATABASE staple_test;\n\nCreate a User\n\nIt’s best not to use the default postgres user for STAPLE. Instead, create a new user:\nReplace username and password with your desired values (keep the quotes).\n\n\nCREATE USER username WITH PASSWORD 'password';\nALTER ROLE username CREATEDB;\n\nCheck Databases\n\nInside the PostgreSQL prompt, you can verify:\n\n\n\\l   -- lists databases\n\\c staple   -- connect to the STAPLE database\n\\dn  -- lists schemas\n\nYou should see something like the following using those commands:\n\npostgres=# \\c staple\nYou are now connected to database \"staple\" as user \"postgres\".\nstaple=# \nstaple=# \\dn\n List of schemas\n  Name  | Owner  \n--------+--------\n public | staple\n(1 row)\n\nstaple=# \npostgres=# \\l\n                                     List of databases\n    Name     |  Owner   | Encoding |   Collate   |    Ctype    |     Access privileges     \n-------------+----------+----------+-------------+-------------+---------------------------\n postgres    | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | \n staple      | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =Tc/postgres             +\n             |          |          |             |             | postgres=CTc/postgres    +\n             |          |          |             |             | staple=CTc/postgres      +\n             |          |          |             |             | staple_admin=CTc/postgres\n staple_test | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | \n template0   | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres              +\n             |          |          |             |             | postgres=CTc/postgres\n template1   | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres              +\n             |          |          |             |             | postgres=CTc/postgres\n(5 rows)\n\nGrant Privileges\n\nFinally, grant permissions for your new user to manage the staple schema:\n\n\nGRANT ALL ON SCHEMA public TO username;\n\nExit PostgreSQL using \\q\n\n\n\n4.3.5 Connect Database to STAPLE App\n\nNow we’ll connect the PostgreSQL database you created to the STAPLE application.\nNavigate to your STAPLE project folder\n\ncd /var/www/html/STAPLE\nls -al\n\nYou should see a file named .env along with other project files.\nYou may need to enable hidden files to see .env files.\nExample:\n\nerin@staple:/var/www/html/STAPLE$ ls -al\ntotal 764\ndrwxr-xr-x  13 root root   4096 Oct 24 06:17 .\ndrwxr-xr-x   6 root root   4096 Oct 24 05:02 ..\ndrwxr-xr-x   3 root root   4096 Oct 24 04:27 db\n-rw-r--r--   1 root root    175 Oct 24 04:27 .editorconfig\n-rw-r--r--   1 root root    494 Oct 24 06:17 .env\n\nCreate a local environment file\n\nCopy the .env file and rename it to .env.local:\n\n\ncp .env .env.local\n- Open it for editing:\nnano .env.local\n\nAdd required environment variables\n\nAt minimum, your .env.local file needs these:\n\n\n# This env file should NOT be checked into source control\n# Use this file for local overrides\n\n# Replace username:password with your Postgres user and password\nDATABASE_URL=postgresql://username:password@localhost:5432/staple\n\n# Generate a random session key\nSESSION_SECRET_KEY=your_generated_session_key\n\n# Where the app will live\nAPP_ORIGIN=\"http://localhost:3000/\"\n\nTo generate a SESSION_SECRET_KEY:\n\nCopy the output and paste it in place of your_generated_session_key.\n\n\nopenssl rand -hex 16\n\nSet up a test environment\n\nCopy .env.test to .env.test.local:\n\n\ncp .env.test .env.test.local\n\nEdit it to point to your test database:\n\nDATABASE_URL=postgresql://username:password@localhost:5432/staple_test\n\n\n4.3.6 Configure Email\nSTAPLE requires an email provider to send system emails (e.g., password resets, project invitations). You can use other options here, but we’ve configured three of them in our current code.\n\n4.3.6.1 Secret Keys\n\nYou must configure at least one of the following options:\nGmail (App Passwords)\n\nCreate a Gmail App Password: Google Guide\nAdd to .env.local:\n\n\nEMAIL_PASS=\"your_app_password\"\n\nAmazon SES\n\nSet up Amazon Simple Email Service (SES): Amazon SES Docs\nAdd to .env.local:\n\n\nACCESS_KEY=\"amazonACCESS\"\nSECRET_ACCESS_KEY=\"amazonSECRET\"\n\nResend\n\nGet an API key from Resend.\nAdd to .env.local:\n\n\nRESEND_API_KEY=\"resendAPI\"\n\n\n4.3.6.2 Edit the Mailer Configuration\nIn addition to adding one of the above environment variables, you’ll need to edit the mailer configuration file so STAPLE knows which provider to use.\n\nOpen the mailer configuration file:\n\nnano integrations/mailer.js\n\nDelete non-used mailers: there are three chunks of code in this file - one for each type of email. You should delete the types you are not using to ensure the app runs. You can also insert your own mail options in this section.\nEdit the forgot password mailer:\n\nnano mailers/forgotPasswordMailer.ts\n\nChange these sections to the mailer you want to use:\n\n// import { Mailer } from \"integrations/mailer\"\nimport { createForgotPasswordMsg } from \"integrations/emails\"\n// import { Amazon } from \"integrations/mailer\"\nimport { ResendMsg } from \"integrations/mailer\"\n//send the email\nawait ResendMsg(createForgotPasswordMsg(to, resetUrl))\n// await Amazon(createForgotPasswordMsg(to, resetUrl)) # or amazon\n// await Mailer(createForgotPasswordMsg(to, resetUrl)) # or gmail\n\nEdit the emails.tsx file if you want to customize the emails that are sent with your own email address and logos.\n\nnano integrations/emails.tsx\n\n\n\n4.3.7 Install STAPLE Requirements\n\nMake sure you are in the STAPLE main folder before running these commands.\nUse the following (not the # line, these are notes) to install packages, tailwind, and daisyui.\n\n# Install all project dependencies\nnpm install\n\n# Install Tailwind CSS\nblitz install tailwind\n\n# Install DaisyUI\nnpm i -D daisyui@latest\n\nSet up the database schema:\n\n# Generate Prisma client\nblitz prisma generate\n\n# Run migrations to create database structure\nblitz prisma migrate dev\n\n\n4.3.8 Starting the App - Local Testing\n\nOpen a terminal window and navigate to the STAPLE folder you cloned:\n\ncd /var/www/html/STAPLE\n\nStart the development server:\n\nblitz dev\n\nOnce the server is running, open your browser and go to: http://localhost:3000 (or whatever address is shown in your terminal output).\n\n\n\n4.3.9 Starting the App - Production\n\nOpen a terminal window and navigate to the STAPLE folder you cloned:\n\ncd /var/www/html/STAPLE\n\nBuild the application:\n\nblitz build\n\n⚠️ Note: If the build process produces errors, you’ll need to fix these before you can continue. Common issues include missing dependencies or mismatched Prisma client versions. Check the terminal output for details. We do not update our dev or main branches without fixing these, but it may be that your edits for your server caused hiccups.\n\n\nOnce the build completes successfully, start the app in production mode:\n\nblitz start\n\n\n4.3.10 Keeping the App Going\nWhen running in production, you’ll want STAPLE to automatically restart after crashes or reboots. The recommended way to do this on Linux is by creating a systemd service.\n\nCreate a service file\n\nNavigate to the systemd directory and create a new file (we’ll call it blitz.service):\n\n\ncd /etc/systemd/system/\nsudo nano blitz.service\n\nExample service file:\n\nReplace WorkingDirectory with the path to your STAPLE installation.\nYou can also set specific users or production modes for security.\n\n\n[Unit]\nDescription=Starts the Blitz service.\nAfter=network.target\n\n[Service]\nType=simple\nWorkingDirectory=/var/www/html/STAPLE\nExecStart=/usr/local/bin/blitz start\nRestart=always\n\n[Install]\nWantedBy=default.target\n\nEnable and control the service\n\nOnce your file is saved, you can manage it with:\n\n\n# Start the service\nsudo systemctl start blitz  \n\n# Check status (press \"q\" to quit)\nsudo systemctl status blitz  \n\n# Restart the service\nsudo systemctl restart blitz  \n\n# Stop the service\nsudo systemctl stop blitz  \n\n# Enable service on boot\nsudo systemctl enable blitz  \n\n# Disable service\nsudo systemctl disable blitz  \n\n# Reset if failed\nsudo systemctl reset-failed blitz  \n\nTutorial reference\n\nIf you’re new to systemd services, see this helpful guide: Service Installation Instructions\n\n\n\n\n4.3.11 Setting Up the Proxy (Nginx)\nNow that STAPLE is running as a background service, you’ll want to expose it through your web domain with Nginx.\n\nNavigate to your Nginx configuration folder\n\ncd /etc/nginx/sites-enabled\n\nCreate a new site config file\n\nName it after your site, e.g.:\n\n\nsudo nano app.staple.science\n\nAdd the server configuration\n\nReplace app.staple.science with your domain and update the log path if needed:\n\n\nserver {\n    listen 80;\n    server_name app.staple.science;\n\n    error_log /var/www/html/YOURFOLDER/logs/web-server.log;\n\n    location / {\n        proxy_pass http://localhost:3000/;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n}\n\n⚠️ Important: Make sure the server_name matches your domain name, and the proxy_pass points to the port where Blitz is running (localhost:3000 by default).\n\n\nTest your config:\n\nsudo nginx -t\n\nIf you see syntax is ok and test is successful, reload Nginx:\n\nsudo systemctl reload nginx\n\n\n4.3.12 Enable HTTPS\n\nUse Let’s Encrypt to add SSL by changing the location of your app in the following:\n\nsudo apt install certbot python3-certbot-nginx\nsudo certbot --nginx -d app.staple.science\n\nThis will automatically configure HTTPS and renew your certificate.\nSee Installation Instructions.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Installation Guide</span>"
    ]
  },
  {
    "objectID": "installation.html#common-issues-fixes",
    "href": "installation.html#common-issues-fixes",
    "title": "4  Installation Guide",
    "section": "4.4 Common Issues & Fixes",
    "text": "4.4 Common Issues & Fixes\n\n4.4.1 Prisma / Database Errors\n\nError: Error: P1000: Authentication failed against database server\n\nFix: Double-check your DATABASE_URL in .env.local. Make sure the username/password match the Postgres user you created.\n\nError: Error: P3014: The underlying table does not exist\n\nFix: Run migrations again:\n\n\nblitz prisma migrate dev\n\nPermission denied when running migrations\n\nFix: Ensure the Postgres user has privileges:\n\n\nALTER ROLE your_username CREATEDB;\nGRANT ALL ON SCHEMA public TO your_username;\n\n\n4.4.2 Build Errors\n\nError: blitz build fails with missing dependencies\n\nFix: Run npm install again to ensure all dependencies are installed.\n\nPrisma client mismatch\n\nFix: Run:\n\n\nblitz prisma generate\n\n\n4.4.3 Email Issues\n\nNo emails are being sent\n\nFix: Check that you kept only one mailer provider in mailer.ts.\nEnsure the correct environment variables (EMAIL_PASS, ACCESS_KEY, SECRET_ACCESS_KEY, or RESEND_API_KEY) are set in .env.local.\nFor Amazon SES, make sure your MAIL_FROM address is verified.\nFor Gmail, use an App Password, not your regular password.\n\n\n\n\n4.4.4 Nginx / Proxy Issues\n\nNginx won’t start\n\nFix: Run sudo nginx -t to test configuration. Correct any syntax errors before restarting.\n\nSite loads, but app doesn’t respond\n\nFix: Make sure blitz is running (check with sudo systemctl status blitz).\nCheck that the proxy_pass in your Nginx config matches the Blitz port (localhost:3000 by default).\n\nSSL certificate not working\n\nFix: Ensure port 80/443 are open on your firewall.\nRe-run certbot:\n\n\nsudo certbot --nginx -d yourdomain.com\n\n\n4.4.5 Service Issues\n\nBlitz doesn’t restart after reboot\n\nFix: Make sure the service is enabled:\n\n\nsudo systemctl enable blitz\n\nService crashes with permission errors\n\nFix: Ensure the User in blitz.service has read/write access to the STAPLE folder.\n\n\n\n\n4.4.6 General Tips\n\nAfter editing .env.local, .env.test.local, or blitz.service, restart the app:\n\nsudo systemctl restart blitz\n\nCheck logs:\n\njournalctl -u blitz -f\nGet help: contact staple.helpdesk at gmail.com.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Installation Guide</span>"
    ]
  },
  {
    "objectID": "glossary.html",
    "href": "glossary.html",
    "title": "5  Glossary",
    "section": "",
    "text": "term\ndefinition\n\n\n\n\nauthorship\nBeing listed as an author on a research paper, usually to recognize someone’s contribution and responsibility for the work. Author order often signals who did the most work or led the project.\n\n\nContributor/Member\nAn individual who actively participates in a project. Contributors may take on different roles, responsibilities, and levels of access within STAPLE.\n\n\ncontributorship\nAn alternative to traditional authorship that provides a more transparent account of each person’s role in a research project. Instead of assigning credit through a fixed order of authors’ names, contributorship models (such as the CRediT taxonomy) specify the specific tasks and responsibilities undertaken by each contributor—for example, conceptualization, data curation, analysis, project administration, or writing. This approach aims to recognize diverse forms of scholarly labor, reduce disputes over author order, and promote accountability.\n\n\nCRediT\nA standardized system for describing the specific roles individuals play in research projects. CRediT defines 14 contributor roles—such as conceptualization, methodology, data curation, writing (original draft), and project administration—to provide a transparent account of who did what. Rather than replacing authorship, CRediT works alongside it to make contributions more visible and accountable, helping to reduce disputes and ensure proper recognition.\n\n\nFAIR\nFAIR stands for Findable, Accessible, Interoperable, and Reusable, a set of guiding principles that aim to improve the management and stewardship of scientific data, metadata, and other research outputs. Originally proposed by Wilkinson et al. (2016), the FAIR principles emphasize that data should be findable through rich metadata and persistent identifiers; accessible using standardized protocols, even when access is restricted; interoperable via the use of shared formats, vocabularies, and ontologies; and reusable by ensuring clear licensing, documentation, and provenance. FAIR is not a strict standard but a framework to guide the development of research practices and infrastructure that support transparency, reproducibility, and long-term reuse by both humans and machines.\n\n\nForms\nStructured templates for capturing important project metadata, such as study design details, instruments used, or ethical approvals, ensuring consistency and transparency.\n\n\nmetadata\nMetadata is information that describes other data. It helps explain what a dataset or research output is, how it was created, who created it, and how it can be used. Metadata makes data easier to find, understand, and reuse.\n\n\nMilestones\nMarkers of significant progress within a project, such as completing data collection or submitting a manuscript. Milestones help track timelines and achievements.\n\n\nProject\nA container for a scientific effort, capturing the overall scope, goals, timeline, and team. All other elements: tasks, contributors, metadata, and outputs are organized within a project.\n\n\nProject Summary\nAn automatically generated overview that consolidates key project information, including tasks, contributors, metadata, milestones, and outputs, into a shareable format.\n\n\nRoles\nDefined levels of access and responsibility within a project (e.g., project manager, editor, viewer). Roles help manage permissions and clarify responsibilities.\n\n\nTags\nFlexible labels used to categorize and filter tasks or projects. Tags help organize work by theme, method, priority, or custom criteria.\n\n\nTask\nA discrete unit of work within a project, such as designing a survey, analyzing data, or drafting a manuscript. Tasks can be assigned, tracked, and logged to monitor progress.\n\n\nTask Logs\nA chronological record of all activity on a task, including assignments, updates, completions, and notes. Task logs create a transparent history of project work, making it easier to track progress, maintain accountability, and reconstruct decisions.\n\n\nTeam\nThe group of contributors working together on a project. Teams may span labs, institutions, or disciplines, and are defined by shared access to project tasks and resources.\n\n\nTransparency and Openness\nA set of community-developed standards created to improve the transparency, accessibility, and reproducibility of research. The TOP Guidelines outline eight modular standards (e.g., data citation, data sharing, analytic methods, preregistration, replication) with different levels of stringency that journals, funders, and institutions can adopt to encourage open scientific practices.\n\n\nUser\nAny person with access to STAPLE. A user may belong to multiple projects and teams, with different roles in each.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Glossary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "6  References",
    "section": "",
    "text": "Adan, C. (2023). The importance of diversity in clinical research.\nBritish Journal of Nursing (Mark Allen Publishing),\n32(18), 898–901. https://doi.org/10.12968/bjon.2023.32.18.898\n\n\nAllen, L., O’Connell, A., & Kiermer, V. (2019). How can we ensure\nvisibility and diversity in research contributions? How the Contributor\nRole Taxonomy (CRediT) is helping the shift from authorship to\ncontributorship. Learned Publishing, 32(1), 71–74. https://doi.org/10.1002/leap.1210\n\n\nAllen, L., Scott, J., Brand, A., Hlava, M., & Altman, M. (2014).\nPublishing: Credit where credit is due. Nature,\n508(7496), 312–313. https://doi.org/10.1038/508312a\n\n\nBorghi, J. A., & Gulick, A. E. V. (2021). Data management and\nsharing: Practices and perceptions of psychology researchers. PLOS\nONE, 16(5), e0252047. https://doi.org/10.1371/journal.pone.0252047\n\n\nCummings, J. N., & Kiesler, S. (2005). Collaborative Research Across\nDisciplinary and Organizational Boundaries. Social Studies of\nScience, 35(5), 703–722. https://doi.org/10.1177/0306312705055535\n\n\nCummings, J. N., & Kiesler, S. (2007). Coordination costs and\nproject outcomes in multi-university collaborations. Research\nPolicy, 36(10), 1620–1634. https://doi.org/10.1016/j.respol.2007.09.001\n\n\nFecher, B., & Friesike, S. (2014). Open Science: One Term, Five\nSchools of Thought (S. Bartling & S. Friesike, Eds.; pp.\n17–47). Springer International Publishing. https://doi.org/10.1007/978-3-319-00026-8_2\n\n\nGrant, S., Corker, K., Mellor, D., Stewart, S., Cashin, A., Lagisz, M.,\nMayo-Wilson, E., Moher, D., Umpierre, D., Barbour, V., Buck, S.,\nCollins, G., Hazlett, H., Hrynaszkiewicz, I., Lee, C., Parker, T.,\nRethlefsen, M., Toomey, E., & Nosek, B. (2025). TOP 2025: An\nupdate to the transparency and openness promotion guidelines. https://doi.org/10.31222/osf.io/nmfs6_v2\n\n\nMoshontz, H., Campbell, L., Ebersole, C. R., IJzerman, H., Urry, H. L.,\nForscher, P. S., Grahe, J. E., McCarthy, R. J., Musser, E. D., Antfolk,\nJ., Castille, C. M., Evans, T. R., Fiedler, S., Flake, J. K., Forero, D.\nA., Janssen, S. M. J., Keene, J. R., Protzko, J., Aczel, B., … Chartier,\nC. R. (2018). The Psychological Science Accelerator: Advancing\nPsychology Through a Distributed Collaborative Network. Advances in\nMethods and Practices in Psychological Science, 1(4),\n501–515. https://doi.org/10.1177/2515245918797607\n\n\nRep. Foxx, V. [R.-N. (2019). H.R.150 - 116th Congress (2019-2020):\nGREAT Act. https://www.congress.gov/bill/116th-congress/house-bill/150\n\n\nRep. Ryan, P. D. [R.-W. (2019). H.R.4174 - 115th Congress\n(2017-2018): Foundations for Evidence-Based Policymaking Act of\n2018. https://www.congress.gov/bill/115th-congress/house-bill/4174\n\n\nSwartz, T. H., Palermo, A.-G. S., Masur, S. K., & Aberg, J. A.\n(2019). The Science and Value of Diversity: Closing the Gaps in Our\nUnderstanding of Inclusion and Diversity. The Journal of Infectious\nDiseases, 220(220 Suppl 2), S33–S41. https://doi.org/10.1093/infdis/jiz174\n\n\nWilkinson, M. D., Dumontier, M., Aalbersberg, Ij. J., Appleton, G.,\nAxton, M., Baak, A., Blomberg, N., Boiten, J.-W., Silva Santos, L. B.\nda, Bourne, P. E., Bouwman, J., Brookes, A. J., Clark, T., Crosas, M.,\nDillo, I., Dumon, O., Edmunds, S., Evelo, C. T., Finkers, R., … Mons, B.\n(2016). The FAIR Guiding Principles for scientific data management and\nstewardship. Scientific Data, 3(1), 160018. https://doi.org/10.1038/sdata.2016.18\n\n\nWuchty, S., Jones, B. F., & Uzzi, B. (2007). The Increasing\nDominance of Teams in Production of Knowledge. Science,\n316(5827), 1036–1039. https://doi.org/10.1126/science.1136099",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>References</span>"
    ]
  }
]